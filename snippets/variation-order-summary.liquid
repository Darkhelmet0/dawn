<div class="variation-order-summary has-variants">
  <style>
    .variant-price-table {
      width: 100%;
      border-collapse: collapse;
      margin-bottom: 20px;
      max-width: 470px;
      border-radius: 8px;
    }
    .variant-price-table th, .variant-price-table td {
      border: 1px solid #ddd;
      padding: 8px;
      text-align: center;
    }
    .variant-price-table th {
      background-color: rgba(28, 0, 56, 0.05);
      color: #7460DE;
    }
  </style>

  {% assign size_variants = product.variants | map: 'option1' | uniq | where_exp: "item", "item != blank" %}
  {% assign has_side_option = false %}
  {% assign has_size_option = false %}
  
  {% for option in product.options_with_values %}
    {% if option.name == 'Side' %}
      {% assign has_side_option = true %}
      {% assign side_variants = option.values %}
    {% endif %}
    {% if option.name == 'Size' %}
      {% assign has_size_option = true %}
    {% endif %}
  {% endfor %}

  {% if has_side_option and has_size_option %}
    <!-- Two-dimensional table for both variants -->
    <table class="variant-price-table has-variants2" data-product-id="{{ product.id }}">
      <thead>
        <tr>
          <th></th>
          {% for size in size_variants %}
            <th data-size="{{ size }}">{{ size }}</th>
          {% endfor %}
        </tr>
      </thead>
      <tbody>
        {% for side in side_variants %}
          <tr>
            <th data-side="{{ side }}">{{ side }}</th>
            {% for size in size_variants %}
              {% assign current_variant = false %}
              {% for variant in product.variants %}
                {% if variant.option1 == size and variant.option2 == side %}
                  {% assign current_variant = variant %}
                  {% break %}
                {% endif %}
              {% endfor %}
              <td 
                data-variant-id="{{ current_variant.id | default: 'unavailable' }}"
                data-price="{{ current_variant.price | default: '' }}"
                data-size="{{ size }}"
                data-side="{{ side }}"
              >
                {% if current_variant != false %}
                <div class="variant-vals-wrapper opacity-zero">
                  <span class="variation-quantity">0</span><span class='multiplier'>x</span><span class="variation-price">{{ current_variant.price | money_without_trailing_zeros }}</span> 
                </div>
                {% else %}
                  N/A
                {% endif %}
              </td>
            {% endfor %}
          </tr>
        {% endfor %}
      </tbody>
    </table>
  {% else %}
    <!-- Single row table for one variant type -->
    <table class="variant-price-table has-variants1" data-product-id="{{ product.id }}">
      <thead>
        <tr>
          {% if has_size_option %}
            {% for size in size_variants %}
              <th data-size="{{ size }}">{{ size }}</th>
            {% endfor %}
          {% elsif has_side_option %}
            {% for side in side_variants %}
              <th data-side="{{ side }}">{{ side }}</th>
            {% endfor %}
          {% endif %}
        </tr>
      </thead>
      <tbody>
        <tr>
          {% if has_size_option %}
            {% for size in size_variants %}
              {% assign current_variant = false %}
              {% for variant in product.variants %}
                {% if variant.option1 == size %}
                  {% assign current_variant = variant %}
                  {% break %}
                {% endif %}
              {% endfor %}
              <td 
                data-variant-id="{{ current_variant.id | default: 'unavailable' }}"
                data-price="{{ current_variant.price | default: '' }}"
                data-size="{{ size }}"
              >
                {% if current_variant != false %}
                <div class="variant-vals-wrapper opacity-zero">
                  <span class="variation-quantity">0</span><span class='multiplier'>x</span><span class="variation-price">{{ current_variant.price | money_without_trailing_zeros }}</span> 
                </div>
                {% else %}
                  N/A
                {% endif %}
              </td>
            {% endfor %}
          {% elsif has_side_option %}
            {% for side in side_variants %}
              {% assign current_variant = false %}
              {% for variant in product.variants %}
                {% if variant.options contains side %}
                  {% assign current_variant = variant %}
                  {% break %}
                {% endif %}
              {% endfor %}
              <td 
                data-variant-id="{{ current_variant.id | default: 'unavailable' }}"
                data-price="{{ current_variant.price | default: '' }}"
                data-side="{{ side }}"
              >
                {% if current_variant != false %}
                <div class="variant-vals-wrapper opacity-zero">
                  <span class="variation-quantity">0</span><span class='multiplier'>x</span><span class="variation-price">{{ current_variant.price | money_without_trailing_zeros }}</span> 
                </div>
                {% else %}
                  N/A
                {% endif %}
              </td>
            {% endfor %}
          {% endif %}
        </tr>
      </tbody>
    </table>
  {% endif %}

  <script>
    function updateQuantities() {
      fetch('/cart.js')
        .then(response => response.json())
        .then(cart => {
          console.log('update-qty return',  cart);
          if(cart.item_count == 0) {
            console.log('no items in cart');
            document.getElementById("cart-icon-bubble").innerHTML =  `Cart <span aria-hidden="true">&nbsp;(0)</span>`;
          }
          const variantQuantities = {};
          
          // Create a map of variant IDs to quantities
          cart.items.forEach(item => {
            variantQuantities[item.variant_id] = item.quantity;
          });

          // Update quantities in the table
          const cells = document.querySelectorAll('.variant-price-table td');
          cells.forEach(cell => {
            const variantId = cell.dataset.variantId;
            cell.setAttribute('data-cartquantity', variantQuantities[variantId] || 0);
          });

          inputsIsoUpdate();
        })
        .catch(error => console.error('Error fetching cart:', error));
    }

    // Function to set up event listeners
    function setupEventListeners() {
      document.addEventListener('cart:updated', updateQuantities);
      
      const addToCartButtons = document.querySelectorAll('form[action="/cart/add"] button[type="submit"]');
      addToCartButtons.forEach(button => {
        button.addEventListener('click', () => {
          setTimeout(updateQuantities, 500);
        });
      });

      const originalFetch = window.fetch;
      window.fetch = function(...args) {
        const result = originalFetch.apply(this, args);
        if (args[0] && typeof args[0] === 'string' && args[0].includes('/cart/add')) {
          result.then(() => {
            setTimeout(updateQuantities, 500);
          });
        }
        return result;
      };
    }

    document.addEventListener('DOMContentLoaded', () => {
      updateQuantities();
      setupEventListeners();
    });

    document.addEventListener('shopify:section:load', setupEventListeners);
  </script>
</div>